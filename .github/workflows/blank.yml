# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token
          run_id=${GITHUB_RUN_ID}
          repo=${GITHUB_REPOSITORY}
          run_info=$(gh api repos/${repo}/actions/runs/${run_id})
          echo run_info: ${run_info}
          #Â name is the name of the workflow file
          # run_started_at is the start time of the workflow
          # we want to get the number of milliseconds between the start time and now
          name=$(echo ${run_info} | jq -r '.name')
          run_url=$(echo ${run_info} | jq -r '.url')
          run_started_at=$(echo ${run_info} | jq -r '.run_started_at')
          run_attempt=$(echo ${run_info} | jq -r '.run_attempt')
          start_seconds=$(date -d "${run_started_at}" +%s)
          now_seconds=$(date +%s)
          duration=$((now_seconds-start_seconds))
          echo "Workflow ${name} took ${duration} seconds"
          echo "run_url is ${run_url}"
          echo "run_attempt is ${run_attempt}"
          echo "run_id is ${run_id}"
          echo "run_started_at is ${run_started_at}"
          echo "start_seconds is ${start_seconds}"
          echo "now_seconds is ${now_seconds}"
          echo "duration is ${duration}"
